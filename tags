ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/
ft_count_strs	libft/ft_split.c	/^static size_t	ft_count_strs(const char *s, char c)/
ft_fill_strs	libft/ft_split.c	/^static char	**ft_fill_strs(const char *s, char c,$/
ft_getlen	libft/ft_itoa.c	/^static int	ft_getlen(int n)$/
ft_is_negative	libft/ft_itoa.c	/^static unsigned int	ft_is_negative(int n)$/
ft_is_sep	libft/ft_split.c	/^static int	ft_is_sep(char c, char sep)$/
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/
ft_len_strsep	libft/ft_split.c	/^static size_t	ft_len_strsep(const char *s, char c)/
ft_lstadd_back	libft/ft_lstadd_back_bonus.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/
ft_lstadd_front	libft/ft_lstadd_front_bonus.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/
ft_lstclear	libft/ft_lstclear_bonus.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *)/
ft_lstdelone	libft/ft_lstdelone_bonus.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *)/
ft_lstiter	libft/ft_lstiter_bonus.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/
ft_lstlast	libft/ft_lstlast_bonus.c	/^t_list	*ft_lstlast(t_list *lst)$/
ft_lstmap	libft/ft_lstmap_bonus.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *),/
ft_lstnew	libft/ft_lstnew_bonus.c	/^t_list	*ft_lstnew(void *content)$/
ft_lstsize	libft/ft_lstsize_bonus.c	/^int	ft_lstsize(t_list *lst)$/
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size/
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t/
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_/
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/
ft_split	libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, /
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size/
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size/
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f) (unsigne/
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, siz/
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char /
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start,/
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/
Mmain	main.c	/^int	main(int argc, char **argv, char **envp)$/
check_args	utils_errors.c	/^int	check_args(int argc)$/
check_cmd	main.c	/^int	check_cmd(char *cmd)$/
check_infile	main.c	/^int	check_infile(char *infile)$/
fork_proc	main.c	/^int	fork_proc(char **argv, char **envp)$/
free_null	main.c	/^void	free_null(void *ptr)$/
ft_fork_exec	defactored.c	/^void	ft_fork_exec(char *envp[])$/
ft_get_path	defactored.c	/^char	**ft_get_path(char *envp[])$/
ft_print_argv	defactored.c	/^void	ft_print_argv(char *argv[])$/
ft_print_errno	defactored.c	/^void	ft_print_errno(void)$/
get_path	main.c	/^char	**get_path(char **envp)$/
old_main	defactored.c	/^int old_main(int argc, char *argv[], char *envp[])/
perror_exit	utils_errors.c	/^int	perror_exit(char *error, int errnb)$/
pipe_exec	main.c	/^int	pipe_exec(char **argv, char **envp)$/
prepend_path_cmd	main.c	/^char	*prepend_path_cmd(char **path, char *cmd)$/
print_strv	main.c	/^void	print_strv(char **strv)$/
write_infile_to_pipe	main.c	/^int	write_infile_to_pipe(int pipefd, char **argv, /
write_pipe_to_outfile	main.c	/^int	write_pipe_to_outfile(int pipefd, char **argv,/
